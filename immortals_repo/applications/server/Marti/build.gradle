buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url gradle.IMMORTALS_REPO
        }
        maven {
            url 'https://repo.gradle.org/gradle/libs-releases'
        }
    }
    dependencies {
        classpath 'mil.darpa.immortals:ImmortalsGradle:+'
        classpath 'com.android.tools.build:gradle:2.3.3'
    }
}

repositories {
    mavenCentral()
    maven {
        url gradle.IMMORTALS_REPO
    }
}

apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'mil.darpa.immortals'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = "2.0-LOCAL"

sourceSets {
    main {
        java {
            srcDirs = ['src', 'src-gen']
        }
        resources {
            srcDirs = ['resources']
        }
    }

    test {
        java {
            srcDirs = ['validation']
        }
        resources {
            srcDirs = ['validation-resources']
        }
    }
}

jar {
    manifest {
        attributes "Implementation-Title": "Marti-immortals",
                "Implementation-Vendor": "BBN Technologies",
                "Implementation-Version": version,
                "Main-Class": "com.bbn.marti.service.MartiMain"
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

    destinationDir = file('./')
    archiveName = "Marti-immortals.jar"
}

clean.doLast {
    def f = new File('./Marti-immortals.jar')
    if (f.exists()) {
        f.delete()
    }
}

test {
    useTestNG {
        excludeGroups 'integrationTests'
    }

    doFirst {
        new File("$buildDir/validation-temp").mkdir()
        systemProperty 'java.io.tmpdir', "$buildDir/validation-temp"
        systemProperty 'mil.darpa.immortals.envfile', "$buildDir/validation-temp/env.json"
    }

}

task('validate', type: Test) {
    group = 'Verification'
    description = 'Executes all the validation tests'

    useTestNG {
        includeGroups 'integrationTests'
    }

    doFirst {
        new File("$buildDir/validation-temp").mkdir()
        systemProperty 'java.io.tmpdir', "$buildDir/validation-temp"
        systemProperty 'mil.darpa.immortals.envfile', "$buildDir/validation-temp/env.json"
    }
}

dependencies {
    compile('mil.darpa.immortals:core:+')
    compile('mil.darpa.immortals.dfus:TakServerDataManager:+')
    compile('org.glassfish.jersey:jersey-bom:2.22.2')
    compile('org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.22.2')
    compile('org.glassfish.jersey.media:jersey-media-json-jackson:2.22.2')
    compile('javax.json:javax.json-api:1.0')
    compile('org.glassfish:javax.json:1.0.4')
    compile('ch.qos.logback:logback-classic:1.2.3')
    compile('org.dom4j:dom4j:2.1.0')
    // CP3-related class
    compile 'mil.darpa.immortals.datatypes:Dom4jCot:+'
    // Needed to parse CoT in some scenarios
    compile 'jaxen:jaxen:1.1.6'
    // Logging
    compile 'log4j:log4j:1.2.16'
    compile 'mil.darpa.immortals.dfus:ElevationApi-1:+'
    //compile 'mil.darpa.immortals.dfus:ElevationApi-2:+'
    testCompile('org.testng:testng:6.13.1')
    testCompile('com.bbn.ataklite:CLITAK:+')
}

eclipse.classpath.plusConfigurations = configurations.findAll { it.name.endsWith("Compile") }
