<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="debug" name="martiRouter">

    <property name="build.dir" value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="doc.dir" value="doc"/>
    <property name="lib.dir" value="lib"/>
    <property name="release.dir" value="release"/>
    <property name="src.dir" value="src"/>

    <property name="debuglevel" value="source,lines,vars"/>

    <!-- Name of the output .jar file -->
    <property name="jar.name" value="marti.jar"/>

    <!-- Name of the output .zip file -->
    <property name="release.name" value="marti-release.zip"/>

    <!-- Base directory for compilation targets -->
    <property name="build.home" value="bin"/>

    <!-- Base directory for distribution target -->
    <property name="deploy.home" value="deploy"/>

    <!-- Main class -->
    <property name="main.class" value="com.bbn.marti.service.MartiMain"/>

    <!-- The base directory for all libraries (jar) files -->
    <property name="lib.home" value="lib"/>

    <!-- The base directory for all source files -->
    <property name="src.home" value="src"/>

    <!-- The base directory for all auto-generated documentation -->
    <property name="doc.home" value="doc"/>

    <!-- The base directory for a Marti release -->
    <property name="release.home" value="release"/>

    <taskdef resource="proguard/ant/task.properties"
             classpath="proguard/proguard.jar"/>

    <path id="martiRouter.classpath">
        <pathelement location="${build.home}/classes"/>
        <fileset dir="${lib.home}">
            <include name="**/*.jar"/>
        </fileset>
    </path>
    <target name="init">
        <mkdir dir="${build.home}/classes"/>
        <copy includeemptydirs="false" todir="${build.home}/classes">
            <fileset dir="${src.home}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="${build.home}/classes">
            <fileset dir="resources">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="${deploy.home}"/>
        <delete dir="${build.home}"/>
        <delete dir="${doc.home}"/>
        <delete dir="${release.home}"/>
        <delete file="marti-debug.jar"/>
    </target>
    <target depends="clean" name="cleanall"/>

    <target name="compile" depends="build"/>

    <target name="jar" depends="core-jar"/>

    <target name="build" depends="build-subprojects,build-project"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="${build.home}/classes" includeantruntime="false">
            <src path="${src.home}"/>
            <classpath refid="martiRouter.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="${build.home}/classes" includeantruntime="false">
            <src path="resources"/>
            <classpath refid="martiRouter.classpath"/>
        </javac>
        <!--        <javac debug="true" debuglevel="${debuglevel}" destdir="${build.home}/classes" source="${source}" target="${target}" includeantruntime="false">-->
        <!--           <src path="test"/>-->
        <!--<classpath refid="martiRouter.classpath"/>-->
        <!--</javac>-->
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes."
            name="build-refprojects"/>
    <target name="FilePublisher">
        <java classname="com.bbn.cot.clients.FilePublisher" failonerror="true" fork="yes">
            <classpath refid="martiRouter.classpath"/>
        </java>
    </target>
    <target name="MartiMain">
        <java classname="com.bbn.marti.service.MartiMain" failonerror="true" fork="yes">
            <classpath refid="martiRouter.classpath"/>
        </java>
    </target>
    <target name="version">
        <exec executable="./makeVersion.sh"/>
    </target>
    <target depends="build,version" name="core-jar" description="Core jar">
        <jar destfile="${build.home}/marti-core.jar" basedir="${build.home}/classes"/>
    </target>
    <target depends="core-jar" name="obs-jar" description="Obfuscated jar">
        <proguard configuration="marti.pro">
            -libraryjars ${java.home}/lib/rt.jar
            -libraryjars ${java.home}/lib/jsse.jar
        </proguard>
    </target>
    <target depends="core-jar" name="debug" description="Debugging jar and MANIFEST.MF">
        <jar destfile="marti-debug.jar" filesetmanifest="mergewithoutmain">
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Main-Class" value="${main.class}"/>
                <attribute name="Class-Path" value="${libs.project}"/>
            </manifest>
            <zipfileset excludes="META-INF/*.SF" src="${build.home}/marti-core.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="${lib.home}/dom4j-1.6.1.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="${lib.home}/log4j-1.2.16.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="${lib.home}/commons-codec.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="${lib.home}/postgresql-9.3-1101.jdbc41.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="${lib.home}/jaxen-1.1.6.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="${lib.home}/immortals-core-1.0-SNAPSHOT.jar"/>
        </jar>
    </target>

    <target name="deploy" depends="release"
            description="Deploys Marti executable jar and its runtime configuration to the deploy directory."/>

    <target name="release" depends="core-jar" description="Create a Marti Release">
        <mkdir dir="${deploy.home}"/>
        <copy includeemptydirs="false" todir="${deploy.home}">
            <fileset dir=".">
                <include name="CoreConfig.xml"/>
                <include name="CoreConfig.xsd"/>
                <include name="validateConfig.sh"/>
                <include name="runMarti.bat"/>
                <include name="runMarti.sh"/>
                <include name="README.txt"/>
                <include name="Version.txt"/>
                <include name="Event-PUBLIC.xsd"/>
            </fileset>
        </copy>

        <mkdir dir="${release.home}"/>
        <zip destfile="${release.home}/${release.name}"
             basedir="${deploy.home}"/>
    </target>

    <target name="doc" description="Generate documentation">
        <mkdir dir="${doc.home}"/>
        <javadoc
                packagenames="*"
                sourcepath="${src.home}"
                destdir="${doc.home}"
                author="true"
                version="true"
                use="true"
                windowtitle="Marti">
            <doctitle><![CDATA[<h1>Marti</h1>]]></doctitle>
            <bottom><![CDATA[<i>Copyright &#169; 2012 BBN Technologies. All Rights Reserved.</i>]]></bottom>
            <tag name="todo" scope="all" description="To do:"/>
            <!--
            <group title="Group 1 Packages" packages="com.dummy.test.a*"/>
            <group title="Group 2 Packages" packages="com.dummy.test.b*:com.dummy.test.c*"/>
            <link offline="true" href="http://download.oracle.com/javase/6/docs/api/" packagelistLoc="C:\tmp"/>
            <link href="http://developer.java.sun.com/developer/products/xml/docs/api/"/>
            -->
        </javadoc>
    </target>
</project>
