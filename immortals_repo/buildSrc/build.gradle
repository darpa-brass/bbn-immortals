apply plugin: 'groovy'
apply plugin: 'eclipse'

import java.nio.file.Files

// Determine global info
def parentPath = buildscript.sourceFile.toPath().parent.toAbsolutePath()
def IMMORTALS_ROOT = parentPath.parent.toAbsolutePath()
def IMMORTALS_REPO = IMMORTALS_ROOT.resolve('shared/IMMORTALS_REPO').toAbsolutePath()

// Record that info to a package in the configuration to be used globally on the system
def resourcePath = parentPath.resolve('ImmortalsConfig/src/main/resources/')
Files.createDirectories(resourcePath)
Files.write(resourcePath.resolve('IMMORTALS_ROOT_PATH'), [IMMORTALS_ROOT.toString() + '/'])
Files.write(resourcePath.resolve('IMMORTALS_REPO_PATH'), [IMMORTALS_REPO.toString() + '/'])

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'eclipse'

    group = 'mil.darpa.immortals'
    version = '2.0-LOCAL'
    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    task sourceJar(type: Jar) {
        classifier 'sources'
        from sourceSets.main.allJava
    }

    publishing {
        publications {
            JavaComponent(MavenPublication) {
                from components.java
                artifact tasks.sourceJar
            }
        }
        repositories {
            maven {
                url IMMORTALS_REPO.toString()
            }
        }
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }
        test {
            java {
                srcDirs = ['src/test/java']
            }
        }
    }
    dependencies {
        compile 'com.google.code.findbugs:jsr305:3.0.1'
        compile 'com.google.code.gson:gson:2.7'
        testCompile 'junit:junit:4.12'
    }
}

build.finalizedBy(':ImmortalsConfig:publish', ':ImmortalsGradle:publish')
