buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
	}
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
	id 'groovy'
	id 'java'
	id "com.github.johnrengelman.shadow" version "4.0.4"
}

group 'mil.darpa.immortals'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
	mavenLocal()
	mavenCentral()
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java']
		}
	}
	test {
		java {
			srcDirs = ['src/test/java']
		}
		resources {
			srcDirs = ['src/test/resources']
		}
	}
	solver {
		java {
			srcDirs = []
		}
		groovy {
			srcDirs = ['src/solver/java', 'src/solver/groovy']
		}
	}
	validator {
		java {
			srcDirs = ['src/validator/java']
		}
	}
}

test {
	useTestNG()
	systemProperty "mil.darpa.immortals.artifactdirectory", buildDir.toPath().resolve("tmp/test").toFile().getCanonicalFile().absolutePath
	systemProperty "mil.darpa.immortals.root", projectDir.toPath().parent.parent.toFile().getCanonicalFile().absolutePath
	systemProperty "immortalsLogLevel", "DEBUG"
	systemProperty "mil.darpa.immortals.basicDisplayMode", ""
	// Nulling these properties since tests should run from canned backup data
	environment "IMMORTALS_CHALLENGE_PROBLEMS_ROOT", null
	environment "IMMORTALS_ADAPTIVE_CONSTRAINT_SATISFACTION_ROOT", null
	setWorkingDir(buildDir.toPath().resolve("tmp/test").toFile())
	testLogging {
		showStandardStreams = true
	}
	reports {
		junitXml.enabled = true
		html.enabled = true
	}
}

task solverJar(type: ShadowJar) {
	group = "Shadow tasks"
	manifest {
		attributes("Implementation-Title": "Immortals-FlightTest-Constraint_solver",
				"Main-Class": "mil.darpa.immortals.flitcons.SolverMain")
	}
	from(project.convention.getPlugin(JavaPluginConvention).sourceSets.solver.output,
			project.convention.getPlugin(JavaPluginConvention).sourceSets.solver.compileClasspath)
	configurations = [project.configurations.runtime]
	destinationDir = file('./')
	archiveName = "flighttest-constraint-solver.jar"
}
jar.finalizedBy(solverJar)

task validatorJar(type: ShadowJar) {
	group = "Shadow tasks"
	manifest {
		attributes("Implementation-Title": "Immortals-FlightTest-Constraint_validator",
				"Main-Class": "mil.darpa.immortals.flitcons.ValidatorMain")
	}
	from(project.convention.getPlugin(JavaPluginConvention).sourceSets.validator.output,
			project.convention.getPlugin(JavaPluginConvention).sourceSets.validator.compileClasspath)
	configurations = [project.configurations.runtime]
	destinationDir = file('./')
	archiveName = 'validator.jar'
}
jar.finalizedBy(validatorJar)

clean.delete('./validator.jar', './flighttest-constraint-solver.jar')

dependencies {
	compile 'ch.qos.logback:logback-classic:1.1.7'
	compile 'ch.qos.logback:logback-core:1.1.7'
	compile 'org.slf4j:slf4j-api:1.7.5'
	compile 'com.google.code.findbugs:jsr305:3.0.1'
	compile 'com.google.code.gson:gson:2.7'

	compile 'commons-io:commons-io:2.6'
	compile 'commons-lang:commons-lang:2.6'
	compile 'info.picocli:picocli:3.9.6'
	compile group: 'xom', name: 'xom', version: '1.3.2'

	compile 'org.drools:drools-decisiontables:7.19.0.Final'
	compile 'org.drools:drools-core:7.19.0.Final'
	compile 'mil.darpa.immortals:mdl-immortals-bridge:0.2'

	solverCompile 'com.tinkerpop.gremlin:gremlin-groovy:2.6.0'
	solverCompile 'com.tinkerpop.gremlin:gremlin-java:2.6.0'
	solverCompile 'com.tinkerpop.blueprints:blueprints-core:2.6.0'
	solverCompile 'org.codehaus.groovy:groovy-all:2.4.15'
	solverCompile 'com.orientechnologies:orientdb-core:2.2.24'
	solverCompile 'com.orientechnologies:orientdb-graphdb:2.2.24'
//	solverCompile 'com.orientechnologies:orientdb-core:2.2.37'
//	solverCompile 'com.orientechnologies:orientdb-graphdb:2.2.37'
	solverCompile sourceSets.main.output
	solverCompile sourceSets.main.compileClasspath

	testCompile 'org.testng:testng:6.14.3'
    testCompile 'mil.darpa.immortals:immortals-orientdb-server:0.2'
	testCompile 'org.slf4j:jul-to-slf4j:1.7.5'
	testCompile sourceSets.main.output
	testCompile sourceSets.main.compileClasspath
	testCompile sourceSets.solver.output
	testCompile sourceSets.solver.compileClasspath

	validatorCompile 'org.slf4j:jul-to-slf4j:1.7.5'
	validatorCompile 'mil.darpa.immortals:immortals-orientdb-server:0.2'
	validatorCompile sourceSets.main.output
	validatorCompile sourceSets.main.compileClasspath
	validatorCompile sourceSets.solver.output
	validatorCompile sourceSets.solver.compileClasspath
}
