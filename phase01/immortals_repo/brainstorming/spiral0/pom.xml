<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0          http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.securboration</groupId>
	<artifactId>immortals</artifactId>
	<packaging>pom</packaging>
	<version>r1.0.0</version>
	<name>IMMoRTALS system</name>
	<url>http://www.securboration.com</url>

	<dependencies></dependencies>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<repo.url>https://dsl-external.bbn.com/svn/immortals/trunk</repo.url>
		<immortals.version>r1.0.0</immortals.version>
		<immortals-lib.version>0.0.3</immortals-lib.version>
		
		<!-- 
		Every module in the project should override this property 
		-->
		<root-path>.</root-path>
		
		<!-- 
		ALL dependency library versions should be defined here (i.e., no child
		POM should contain an explicit version number for any dependency) 
		-->
		
		
		
		<!-- ASM provides bytecode analysis/instrumentation functionality -->
		<asm.version>5.0.4</asm.version>
		
		<!-- general purpose dependencies for file IO, configuration, etc. -->
		<commons-compress.version>1.9</commons-compress.version>
		<commons-io.version>2.4</commons-io.version>
		<commons-lang.version>3.4</commons-lang.version>
		
		<!-- jena -->
		<jena.version>3.0.0</jena.version>
		
		<json.version>20160212</json.version>
		
		<!-- maven plugin development -->
		<maven-plugin-api.version>3.3.9</maven-plugin-api.version>
		<maven-plugin-annotations.version>3.4</maven-plugin-annotations.version>
		
		
		<jstl.version>1.2</jstl.version>
		<spring.version>4.1.7.RELEASE</spring.version>
		<spring-boot.version>1.2.6.RELEASE</spring-boot.version>
		<jackson.version>2.6.1</jackson.version>
		<jersey-container-servlet.version>2.10.1</jersey-container-servlet.version>
		<servlet.version>3.1.0</servlet.version>
		<junit.version>4.12</junit.version>
		<log4j2.version>2.0.1</log4j2.version>
		<tomcat.version>8.0.26</tomcat.version>
	</properties>

	<modules>
		<!-- converts deployment models into POJOs -->
		<module>immortals-deployment-ingestor</module>
		
		<!-- the POJO vocabulary from which the ontology is derived -->
		<module>immortals-ontologies-vocab</module>
		
		<!-- contains main methods that instantiate POJOs -->
		<module>immortals-ontologies-vocab-instances</module>
		
		<!-- 
		Annotations for marking up POJOs in a way that permits better semantic models to be generated 
		from them (e.g., specifying that a class has two parents, which is impossible to do in pure 
		Java since there's only support for single inheritance)
		-->
		<module>immortals-ontologies-pojo-annotations</module>
		
		<!-- generates the IMMoRTALS ontology from POJOS and instances of POJOs -->
		<module>immortals-ontologies-generate</module>
		
		<!-- 
		a maven plugin, currently not used as it's been replaced by the object-to-triples module
		-->
		<!-- <module>immortals-maven-plugin</module> -->
		
		<!-- converts an object instance into individuals or a java class into a vocabulary -->
		<module>immortals-object-to-triples</module>
		
		<!-- POJO-based API for interacting with fuseki -->
		<module>immortals-repository-api</module>
		
		<!-- DAS-facing REST service for interacting with the triple store -->
		<module>immortals-repository-service</module>
		
		<!-- bootstrapping logic (populates Fuseki with starting point knowledge) -->
		<module>immortals-repository-ingestor</module>

		<module>immortals-dependency-parser</module>

		<!-- 
		TODO: other modules included in the default build go here 
		-->
	</modules>

	<profiles>

		<profile>
			<id>addHeaders</id>
			<activation>
				<property>
					<name>addHeaders</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.mycila</groupId>
						<artifactId>license-maven-plugin</artifactId>
						<version>2.11</version>
						<configuration>
							<header>${root-path}/etc/licenses/securboration.lic</header>
						</configuration>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>format</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>removeHeaders</id>
			<activation>
				<property>
					<name>removeHeaders</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.mycila</groupId>
						<artifactId>license-maven-plugin</artifactId>
						<version>2.11</version>
						<configuration>
							<header>${root-path}/etc/licenses/securboration.lic</header>
						</configuration>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>remove</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
	</profiles>

	<build>
		<defaultGoal>install</defaultGoal>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.14.1</version>
				<configuration>
					<testFailureIgnore>false</testFailureIgnore>
					<trimStackTrace>false</trimStackTrace>
				</configuration>
			</plugin>

			<!--
			NOTE: Java 8 compliance level is *REQUIRED* due to extensive
			use of functional interfaces/lambdas and other Java 8 features
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

		</plugins>

	</build>

</project>